name: CI
on:
  push:
  pull_request:
jobs:
  build:
    defaults:
      run:
        shell: bash
    runs-on: ubuntu-latest
    container:
      image: ubuntu:jammy-20230126
      env:
        DEBIAN_FRONTEND: noninteractive
        INIT_ENV: "/home/ns-3_c-v2x/.base-image/init-env.sh"
        SONAR_SCANNER_VERSION: "4.6.2.2472"
        TERM: xterm
      options: "--user root"
    steps:
    # Bionic's git version is not sufficient for actions/checkout 0 fetch-depth,
    # remove this step after rebasing ns3_c-v2x to newer Ubuntu release
    - name: Install newer git for checkout
      run: |
        apt-get update
        apt-get install -y software-properties-common
        add-apt-repository -u ppa:git-core/ppa
        apt-get install -y git
    - name: Checkout ${{ github.event.repository.name }}
      uses: actions/checkout@v3.3.0
      with:
        path: ${{ github.event.repository.name }}
        fetch-depth: 0
    - name: Move source code
      run: mv $GITHUB_WORKSPACE/${{ github.event.repository.name }} /home/ns3_c-v2x
    - name: Install dependencies
      run: |
        mkdir /home/ns3_c-v2x/.base-image
        touch /home/ns3_c-v2x/.base-image/init-env.sh
        cd /home/ns3_c-v2x/
        apt-get update -qy
        apt-get install -y build-essential gcc g++ sudo curl
        apt-get -y install python3-coverage python3-pip python3-pytest
    - name: Install Sonar
      run: |
        SONAR_DIR=/opt/sonarqube
        mkdir $SONAR_DIR
        curl -o $SONAR_DIR/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VERSION}-linux.zip
        curl -o $SONAR_DIR/build-wrapper.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
        curl -sL https://deb.nodesource.com/setup_16.x |bash -
        apt-get install -y nodejs unzip
        cd $SONAR_DIR
        for ZIP in *.zip; do
          unzip "$ZIP" -d .
          rm "$ZIP"
        done
        mv $(ls $SONAR_DIR |grep "sonar-scanner-") $SONAR_DIR/sonar-scanner/
        mv $(ls $SONAR_DIR |grep "build-wrapper-") $SONAR_DIR/build-wrapper/
        echo $SONAR_DIR/sonar-scanner/bin >> $GITHUB_PATH
        echo $SONAR_DIR/build-wrapper >> $GITHUB_PATH
    - name: Build
      run: |
        source ${INIT_ENV}
        cd /home/ns3_c-v2x/
        ./waf configure
        #build-wrapper-linux-x86-64 --out-dir /home/ns3_c-v2x/bw-output ./waf build
        build-wrapper-linux-x86-64 --out-dir /home/ns3_c-v2x/bw-output ./build.sh
    - name: Tests
      run: |
        cd /home/ns3_c-v2x/
        ldconfig
        ./coverage.sh
    - name: Archive test results
      uses: actions/upload-artifact@v3
      with:
        name: Test Results
        path: /home/ns3_c-v2x/test_results
    - name: Run SonarScanner
      uses: usdot-fhwa-stol/actions/sonar-scanner@main
      with:
        sonar-token: ${{ secrets.SONAR_TOKEN }}
        working-dir: /home/ns3_c-v2x